openapi: 3.1.0
info:
  title: Solar Control - Arduino service
  description: |-
   This service is designed to collect and process the parameters of the DC and AC circuits of the solar power plant, and then send the data to the client
  version: 1.0.0
servers:
  - url: '{protocol}://esp8266.local'
    variables:
      protocol:
        enum:
          - http
          - ws
        default: http
tags:
  - name: ESP
    description: Operations with ESP board
  - name: PZEM
    description: Access to PZEM sensors
paths:
  /health:
    get:
      tags:
        - ESP
      summary: Returns ESP health status
      operationId: getEspHealth
      responses: 
        200: 
          description: OK
          content:
            text/plain:
              schema:
                type: string
                examples:
                  - UP
  /status:
    get:
      tags:
        - ESP
      summary: Returns a status of components connected to the ESP
      operationId: getEspStatus
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EspStatus'
  /pzems:
    get:
      tags:
        - PZEM
      summary: Returns values of all connected PZEMs
      operationId: getPzemValues
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PzemData'
  /pzems/address:
    patch:
      tags:
        - PZEM
      summary: Sets the address to PZEM
      operationId: setPzemAddress
      parameters:
        - name: id
          in: query
          description: ID of the PZEM for which the address is changed
          required: true
          schema:
            type: string
            enum:
              - acInput
              - acOutput
              - dcBattery
              - dcSun
            default: acInput
        - name: address
          in: query
          description: The address to set in PZEM memory
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 248
            default: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PzemAddress'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
                examples:
                  - The "address" param should be in the range between 1 and 247
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
                examples:
                  - PZEM with entered "id" is not found

  /pzems/shunt:
    patch:
      tags:
        - PZEM
      summary: Sets the shunt type to DC PZEM
      operationId: setPzemShunt
      parameters:
        - name: id
          in: query
          description: ID of the DC PZEM for which the shunt type is changed
          required: true
          schema:
            type: string
            enum:
              - dcBattery
              - dcSun
            default: dcBattery
        - name: shunt
          in: query
          description: The shunt type to set in PZEM memory
          required: true
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 3
            default: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DcPzemShunt'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
                examples:
                  - The "shunt" param should be in the range between 0 and 3
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
                examples:
                  - PZEM with entered "id" is not found
  /pzems/counter:
    delete:
      tags:
        - PZEM
      summary: Resets the energy counter of all PZEMs
      operationId: resetEnergyCounter
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PzemCounter'

components:
  schemas:
    EspStatus:
      type: object
      properties:
        wifi:
          $ref: '#/components/schemas/WiFiStatus'
        date:
          $ref: '#/components/schemas/DateStatus'
        pzems:
          $ref: '#/components/schemas/PzemsStatus'
        eeprom:
          $ref: '#/components/schemas/EepromStatus'
      required: 
        - wifi
        - date
        - pzems
        - eeprom
    WiFiStatus:
      type: object
      properties:
        ip:
          type: string
          description: Station interface IP address
          format: ipv4
          examples: 
            - "198.51.100.42"
        mac:
          type: string
          description: Station interface MAC address
          pattern: '^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$'
          examples:
            - "54:8F:94:AE:2B:8A"
      required:
        - ip
        - mac
    DateStatus:
      type: object
      properties:
        createdAtGmt:
          type: string
          description: UTC Date in ISO format
          format: date-time
          examples: 
            - "2024-09-01T05:30:35.637Z"
        createdAt:
          type: string
          description: Date in the local timezone
          format: date-time
          examples:
            - "2024-09-01T08:30:35.637Z"
      required:
        - createdAtGmt
        - createdAt
    PzemsStatus:
      type: object
      properties:
        acInput:
          $ref: '#/components/schemas/AcPzemStatus'
        acOutput:
          $ref: '#/components/schemas/AcPzemStatus'
        dcBattery:
          $ref: '#/components/schemas/DcPzemStatus'
        dcSun:
          $ref: '#/components/schemas/DcPzemStatus'
      required:
        - acInput
        - acOutput
        - dcBattery
        - dcSun
    AcPzemStatus:
      type: object
      properties:
        isConnected:
          type: boolean
          description: true/false indicator when the PZEM is connected
        currentAddress:
          type: integer
          format: int32
          description: Configured address to connect to the PZEM
          minimum: 1
          maximum: 248
          examples: 
            - 2
        savedAddress:
          type: integer
          format: int32
          description: Address saved in PZEM memory
          minimum: 0
          maximum: 248
          examples: 
            - 2
      required:
        - isConnected
        - currentAddress
        - savedAddress
    DcPzemStatus:
      type: object
      properties:
        isConnected:
          type: boolean
          description: true/false indicator when the PZEM is connected
        currentAddress:
          type: integer
          format: int32
          description: Configured address to connect to the PZEM
          minimum: 1
          maximum: 248
          examples: 
            - 2
        savedAddress:
          type: integer
          format: int32
          description: Address saved in PZEM memory
          minimum: 0
          maximum: 248
          examples: 
            - 2
        savedShuntType:
          type: integer
          format: int32
          description: Shunt type saved in PZEM memory
          minimum: 0
          maximum: 3
          examples:
            - 1
      required:
        - isConnected
        - currentAddress
        - savedShuntType
    EepromStatus:
      type: object
      properties:
        isConnected:
          type: boolean
          description: true/false indicator when the EEPROM module is connected
      required:
        - isConnected
    PzemData:
      type: object
      properties:
        createdAtGmt:
          type: string
          format: date-time
          description: Data collection date in UTC
          examples:
            - "2024-09-01T12:22:05.042Z"
        acInput:
          $ref: '#/components/schemas/AcPzem'
        acOutput:
          $ref: '#/components/schemas/AcPzem'
        dcBattery:
          $ref: '#/components/schemas/DcPzem'
        dcSun:
          $ref: '#/components/schemas/DcPzem'
    AcPzem:
      type: object
      properties:
        voltageV:
          type: number
          format: float
          description: AC voltage in Volts
          examples:
            - 233.1000061
        currentA:
          type: number
          format: float
          description: AC current in Amps
          examples:
            - 0.097999997
        powerKw:
          type: number
          format: float
          description: AC active power in kW
          examples:
            - 0.0135
        energyKwh:
          type: number
          format: float
          description: AC active energy in kWh since last reset
          examples:
            - 0.003
        frequencyHz:
          type: number
          format: float
          description: AC frequency in Hz
          examples:
            - 50
        powerFactor:
          type: number
          format: float
          description: AC power factor of the load
          examples:
            - 0.589999974
        t1EnergyKwh:
          type: number
          format: float
          description: Calculated value of active energy during T1 zone
          examples:
            - 0.004999999
        t2EnergyKwh:
          type: number
          format: float
          description: Calculated value of active energy during T2 zone
          examples:
            - 0.012914399
    DcPzem:
      type: object
      properties:
        voltageV:
          type: number
          format: float
          description: DC voltage in Volts
          examples:
            - 12.109999966
        currentA:
          type: number
          format: float
          description: DC current in Amps
          examples:
            - 0.430000007
        powerKw:
          type: number
          format: float
          description: DC active power in kW
          examples:
            - 0.0052
        energyKwh:
          type: number
          format: float
          description: DC active energy in kWh since last reset
          examples:
            - 0.004
        t1EnergyKwh:
          type: number
          format: float
          description: Calculated value of active energy during T1 zone
          examples:
            - 0.004999999
        t2EnergyKwh:
          type: number
          format: float
          description: Calculated value of active energy during T2 zone
          examples:
            - 0.012914399
    PzemAddress:
      type: object
      properties:
        currentAddress:
          type: integer
          format: int32
          description: Current configured address to connect
          minimum: 1
          maximum: 248
          examples: 
            - 2
        addressToSet:
          type: integer
          format: int32
          description: Address to save in PZEM memory
          minimum: 1
          maximum: 248
          examples: 
            - 1
        isChanged:
          type: boolean
          description: true/false indicator when the address is set
      required:
        - addressToSet
        - isChanged
    DcPzemShunt:
      type: object
      properties:
        shuntTypeToSet:
          type: integer
          format: int32
          description: Shunt type to save in PZEM memory
          minimum: 0
          maximum: 3
          examples: 
            - 1
        isChanged:
          type: boolean
          description: true/false indicator when the shunt type is set
      required:
        - shuntTypeToSet
        - isChanged
    PzemCounter:
      type: object
      description: true/false indicators for every PZEM to notify which counters were reset
      properties:
        acInput:
          type: boolean
        acOutput:
          type: boolean
        dcBattery:
          type: boolean
        dcSun:
          type: boolean
      required:
        - acInput
        - acOutput
        - dcBattery
        - dcSun
